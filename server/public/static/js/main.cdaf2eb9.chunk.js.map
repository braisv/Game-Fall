{"version":3,"sources":["components/auth/AuthService.jsx","components/Navbar/Navbar.jsx","components/auth/Signup.jsx","components/auth/Login.jsx","components/GameList/GameList.jsx","components/Main/Main.jsx","utils/GameService.jsx","components/NewGame/NewGame.jsx","utils/UserService.jsx","components/GameCard/GameCard.jsx","components/App/App.jsx","serviceWorker.js","index.js"],"names":["AuthService","signup","username","password","name","surname","email","phone","service","post","then","response","data","login","loggedin","get","logout","this","axios","create","baseURL","withCredentials","Navbar","handleLogout","e","console","log","props","state","loggedInUser","nextProps","setState","className","Link","to","href","onClick","Component","Signup","handleFormSubmit","event","preventDefault","getUser","user","catch","error","handleChange","target","value","onSubmit","type","placeholder","onChange","Login","GameList","games","search","class","map","game","_id","src","image","alt","Main","id","updateSearch","filterProducts","GameService","query","genres","platforms","screenshots","collections","covers","franchises","companies","similars","NewGame","handleChangeForArray","idx","platform","release","genre","description","category","stock","price","history","push","searchFormSubmit","gamesFound","selectedGame","first_release_date","cover","summary","involved_companies","similar_games","img","i","key","setSelectedGame","for","label","handleChangeSelect","bind","plat","withRouter","UserService","updateUser","updatedUserObj","put","URL","theFile","res","GameCard","buttonSelected","buttonClass","toggleWish","wishes","wishlist","includes","splice","indexOf","updatedUser","userService","getGameDetails","gameID","gameFromDb","err","userInSession","shot","toggleChart","toggleButton","style","styles","App","userObj","fetchUser","Fragment","Redirect","Switch","Route","exact","path","component","render","match","params","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cdaf2eb9.chunk.js","sourcesContent":["// auth/auth-service.js\nimport axios from 'axios';\n\nexport default class AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: 'http://localhost:5000/api/auth',\n      withCredentials: true\n    });\n  }\n\n  signup = (username, password, name, surname, email, phone) => {\n    return this.service.post('/signup', {username, password, name, surname, email, phone })\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentuser',)\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}","// navbar/Navbar.js\n\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../auth/AuthService\";\nimport \"./Navbar.css\"\n\nexport default class Navbar extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loggedInUser: null,\n    };\n\n    this.service = new AuthService();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = e => {\n    console.log()\n    this.props.logout(e);\n  };\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <nav className=\"nav-style flex-column\">\n          <div className=\"header flex\">\n              <Link className='link' to=\"/home\"><div className=\"nav-box flex home\">Home</div></Link>            \n              <Link className='link' to=\"/signup\"><div className=\"nav-box flex shop\">Shop</div></Link>\n              {/* <Link className='link' to=\"/addgame\"><div className=\"nav-box flex market\">Market</div></Link>      */}\n              <Link className='link' to=\"/test\"><div className=\"nav-box flex aboutus\">About us</div></Link>\n              <Link className='link' to=\"/signup\"><div className=\"nav-box flex user\">{this.state.loggedInUser.username}</div></Link>\n        \n          <ul className='flex'>\n            <li>\n              <a className='link' href='/' onClick={this.handleLogout}>Logout</a> \n            </li>\n          </ul>\n          </div>\n        </nav>\n      )\n    } else {\n      return (\n        <div>\n          <nav className=\"nav-style\">\n            <ul className='flex'>\n              <li>\n                <Link className='link' to=\"/signup\"><div className=\"nav-box flex signup\">Sign Up</div></Link>\n              </li>\n              <li>\n                <Link className='link' to=\"/login\"><div className=\"nav-box flex login\">Log in</div></Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport AuthService from './AuthService'\nimport \"./Signup.css\"\n\n\nexport default class Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      name: '',\n      surname: '',\n      email: '',\n      phone: '',\n    };\n    this.service = new AuthService();\n  }\n    \n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const { username, password, name, surname, email, phone } = this.state;\n\n    this.service.signup(username, password, name, surname, email, phone)\n    .then( response => {\n        this.setState({\n            username: \"\", \n            password: \"\",\n            name: '',\n            surname: '',\n            email: '',\n            phone: ''\n        });\n\n        this.props.getUser(response.user)\n    })\n    .catch(error => {\n      this.setState({\n        username: username,\n        password: password,\n        name: name,\n        surname: surname,\n        email: email,\n        phone: phone,\n        error: true\n      });\n    })\n  }\n\n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n      \n\n  render() {\n    return(\n      <div className='container-card'>\n        <h3>Welcome!, create your account next:</h3>\n\n        <form className=\"signup-form\" onSubmit={this.handleFormSubmit}>\n          <fieldset>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" placeholder=\"userN...\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n\n          <fieldset>\n            <label>Name:</label>\n            <input type=\"text\" name=\"name\" placeholder=\"John...\" value={this.state.name} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n\n          <fieldset>\n            <label>Surname:</label>\n            <input type=\"text\" name=\"surname\" placeholder=\"Wick...\" value={this.state.surname} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n\n          <fieldset>\n            <label>E-mail:</label>\n            <input type=\"text\" name=\"email\" placeholder=\"something@like.this...\" value={this.state.email} onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n\n          <fieldset>\n            <label>Phone Number:</label>\n            <input type=\"text\" name=\"phone\" value={this.state.phone} placeholder=\"+34 333 911 199...\" onChange={ e => this.handleChange(e)}/>\n          </fieldset>\n          \n          <fieldset>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          </fieldset>\n          \n          <input type=\"submit\" value=\"Sign up\" />\n        </form>\n\n        <h1>{this.state.error ? 'Error' : ''}</h1>\n      </div>\n    )\n  }\n}\n","// auth/Signup.js\nimport React, { Component } from 'react';\nimport AuthService from './AuthService'\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n\n    return (<div>\n      <h3>Please, login to our site</h3>\n\n      <form onSubmit={this.handleFormSubmit}>\n        <fieldset>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <fieldset>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </fieldset>\n\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>)\n  }\n}","import React, { Component } from 'react'\nimport axios from 'axios'\nimport { Link } from \"react-router-dom\";\nimport './GameList.css'\n\nexport default class GameList extends Component {\n  constructor() {\n    super()\n    this.state = {\n      games: '',\n      search: ''\n    }\n  }\n\n  updateSearch(e) {\n    let search = e.target.value\n\n    this.setState({\n      ...this.state,\n      search: search\n    })\n  }\n\n  componentDidMount() {\n    axios\n      .get('http://localhost:5000/games')\n      .then(({ data }) => {\n        this.setState({ games: data })\n        console.log(data)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }\n\n  render() {\n    const { games } = this.state\n    console.log(games)\n\n    // let resultSearch = games.filter(el => el.name.toLowerCase().includes(this.props.filterProducts.toLowerCase()))\n\n    if (!games) return <h1>NO STOCK.</h1>\n    return (\n      <div className='gameList'>\n        <div class=\"container flex\">\n          {this.state.games.map(game => (\n            <Link to={`/game/${game._id}`} className=\"linked\">\n              <div class=\"card\">\n                <img src={`https://images.igdb.com/igdb/image/upload/t_cover_big/${game.image[0]}`} alt=\"Cover game\" />\n              </div>\n              <div className=\"text-img\"><h3>{game.name}</h3></div>\n            </Link>\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport './Main.css'\nimport GameList from '../GameList/GameList';\nimport { Link } from \"react-router-dom\";\n\n\nexport default class Main extends Component {\n  constructor() {\n    super()\n    this.state = {\n      search: ''\n    }\n  }\n\n  updateSearch(e) {\n    let search = e.target.value\n\n    this.setState({\n      ...this.state,\n      search: search\n    })\n  }\n\n  render() {\n    return (\n      <div className='main flex'>\n        <div className=\"flex-colum\">\n          <div className=\"flex\">\n            <Link className='link' to=\"/addgame\"><button>Add new Game</button></Link>\n            <form className='searchBar'>\n              <input type=\"search\" name=\"search\" id=\"search\" placeholder='Search game' onChange={e => this.updateSearch(e)} />\n            </form>\n          </div>\n          <GameList filterProducts={this.state.search}></GameList>\n        </div>\n      </div>);\n\n  }\n}","// auth/auth-service.js\nimport axios from 'axios';\n\nexport default class GameService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: 'http://localhost:5000/api/db',\n      withCredentials: true\n    });\n  }\n\n  search = (query) => {\n    return this.service.get(`/search?query=${query}`, { query })\n      .then(response => response.data)\n  }\n\n  game = (id) => {\n    return this.service.get(`/game/${id}`)\n      .then(response => response.data)\n  }\n\n  genres = (id) => {\n    return this.service.get(`/genres/${id}`)\n      .then(response => response.data)\n  }\n\n  platforms = (id) => {\n    return this.service.get(`/platforms/${id}`)\n      .then(response => response.data)\n  }\n\n\n  screenshots = (id) => {\n    return this.service.get(`/screenshots/${id}`)\n      .then(response => response.data)\n  }\n\n\n  collections = (id) => {\n    return this.service.get(`/collections/${id}`)\n      .then(response => response.data)\n  }\n\n\n  covers = (id) => {\n    return this.service.get(`/covers/${id}`)\n      .then(response => response.data)\n  }\n\n\n  franchises = (id) => {\n    return this.service.get(`/franchises/${id}`)\n      .then(response => response.data)\n  }\n\n\n  companies = (id) => {\n    return this.service.get(`/companies/${id}`)\n      .then(response => response.data)\n  }\n\n\n  similars = (id) => {\n    return this.service.get(`/similars/${id}`)\n      .then(response => response.data)\n  }\n\n\n  // login = (username, password) => {\n  //   return this.service.get('/login', { username, password })\n  //     .then(response => response.data)\n  // }\n}","import React, { Component } from 'react'\nimport { withRouter } from \"react-router-dom\";\nimport axios from 'axios'\nimport './NewGame.css'\nimport GameService from '../../utils/GameService'\nimport './NewGame.css'\n\nclass NewGame extends Component {\n  constructor() {\n    super()\n    this.service = new GameService();\n    this.state = {\n      search: '',\n      gamesFound: [],\n      selectedGame: '',\n      name: \"\",\n      platform: [],\n      release: \"\",\n      genre: \"\",\n      image: \"\",\n      description: \"\",\n      companies: \"\",\n      screenshots: [],\n      similars: \"\",\n      price: \"\",\n      category: '',\n      stock: \"\"\n    }\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    console.log(e.target)\n    this.setState({ [name]: value });\n  }\n\n  handleChangeSelect(e) {\n    this.setState({\n      platform: [e.target.value]\n    })\n  }\n\n  handleChangeForArray = (e, idx) => {\n    let screenshots = [...this.state.screenshots]\n    screenshots[idx] = e.target.value\n\n    this.setState({\n      ...this.state,\n      screenshots: screenshots\n    });\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    let { name, platform, release, genre, image, description, companies, screenshots, similars, category, stock, price } = this.state\n\n    axios.post(`http://localhost:5000/new`, { name, platform, release, genre, image, description, companies, screenshots, similars, category, stock, price })\n      .then(() => {\n        this.setState({\n          name: \"\",\n          platform: [],\n          release: \"\",\n          genre: \"\",\n          image: \"\",\n          description: \"\",\n          companies: \"\",\n          screenshots: [],\n          similars: \"\",\n          price: \"\",\n          category: \"\",\n          stock: \"\",\n        });\n        this.props.history.push('/home');\n      })\n      .catch(error => console.log(error))\n  }\n\n  updateSearch(e) {\n    let search = e.target.value\n\n    this.setState({\n      ...this.state,\n      search: search\n    })\n  }\n\n  searchFormSubmit = (event) => {\n    event.preventDefault();\n    const search = this.state.search;\n\n    this.service.search(search)\n      .then(response => {\n        console.log(response)\n        this.setState({\n          gamesFound: response,\n          search: search\n        });\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          search: search\n        });\n      })\n  }\n\n  setSelectedGame(id) {\n    this.setState({\n      ...this.state,\n      selectedGame: id\n    })\n\n    this.service.platforms(id)\n      .then(response => {\n        this.setState({\n          ...this.state,\n          name: response.name,\n          platform: response.platforms,\n        });\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          name: ''\n        });\n      })\n\n    this.service.genres(id)\n      .then(response => {\n        this.setState({\n          ...this.state,\n          release: response.first_release_date,\n          genre: response.genres,\n        });\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          genres: ''\n        });\n      })\n\n    this.service.covers(id)\n      .then(response => {\n        this.setState({\n          ...this.state,\n          image: response.cover,\n          description: response.summary\n        });\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          covers: ''\n        });\n      })\n\n    this.service.screenshots(id)\n      .then(response => {\n        this.setState({\n          ...this.state,\n          screenshots: response.screenshots,\n        });\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          screenshots: ''\n        });\n      })\n\n    this.service.companies(id)\n      .then(response => {\n        this.setState({\n          ...this.state,\n          companies: response.involved_companies\n        });\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          companies: ''\n        });\n      })\n\n    this.service.similars(id)\n      .then(response => {\n        this.setState({\n          ...this.state,\n          similars: response.similar_games\n        });\n      })\n      .catch(error => {\n        console.log(error)\n        this.setState({\n          similars: ''\n        });\n      })\n  }\n\n  render() {\n\n    let img\n    if (!!this.state.image) {\n      img = `https://images.igdb.com/igdb/image/upload/t_cover_small_2x/${this.state.image}`\n    } else {\n      img = '#'\n    }\n\n    return (\n      <div className='form-section flex-column'>\n        <form onSubmit={this.searchFormSubmit} className='searchBar'>\n          <input type=\"search\" name=\"search\" id=\"search\" placeholder='Search game' value={this.state.search} onChange={e => this.updateSearch(e)} />\n        </form>\n        <div className=\"searchResults flex\">\n          {this.state.gamesFound.map((game, i) => (\n            <div className=\"linked\">\n              <div key={i} className=\"gameCardSmall\" onClick={() => this.setSelectedGame(game.id)}>\n                {/* <div className=\"image-section\">\n            <l i>\n\n              <img src={game.image_url} alt='#' />\n            </l>\n          </div> */}\n                <div className=\"description-section\">\n                  <h1>{game.name}</h1>\n                  {/* <p>{game.cover}</p> */}\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        <form onSubmit={this.handleFormSubmit}>\n\n          <div className=\"parent\">\n            <div className=\"div1 flex-column\">\n              <label for='name'>Name:</label>\n              <input\n                id=\"inputName\"\n                type=\"text\"\n                label=\"Name\"\n                onChange={e => this.handleChange(e)}\n                name='name'\n                placeholder='Name of the Game'\n                value={this.state.name}\n              />\n            </div>\n            <div className=\"div2 flex-column\">\n              <label for='image'>Image:</label>\n              <input\n                id=\"inputImage\"\n                type=\"text\"\n                label=\"Image\"\n                onChange={e => this.handleChange(e)}\n                name='image'\n                placeholder='Image URL'\n                value={this.state.image}\n              />\n\n              <img src={img} alt=\"Cover game\" />\n            </div>\n            <div className=\"div3 flex-column\">\n              <label>Platform:</label>\n              <select onChange={this.handleChangeSelect.bind(this)} >\n                {this.state.platform.map(plat => (\n                  <option value={plat}>{plat}</option>\n                ))}\n              </select>\n            </div>\n            <div className=\"div4 flex-column\">\n              <label for='genre'>Genre:</label>\n              <input\n                id=\"inputGenre\"\n                type=\"text\"\n                label=\"Genre\"\n                onChange={e => this.handleChange(e)}\n                name='genre'\n                placeholder='Genre URL'\n                value={this.state.genre}\n              />\n            </div>\n            <div className=\"div5 flex-column\">\n              <label for='release'>Release date:</label>\n              <input\n                id=\"inputRelease\"\n                type=\"text\"\n                label=\"Release\"\n                onChange={e => this.handleChange(e)}\n                name='release'\n                placeholder='Release date'\n                value={this.state.release}\n              />\n            </div>\n            <div className=\"div6 flex-column\">\n              <label for='summary'>Summary:</label>\n              <textarea\n                id=\"inputDescription\"\n                type=\"text\"\n                label=\"Description\"\n                onChange={e => this.handleChange(e)}\n                name='description'\n                placeholder='Summary'\n                value={this.state.description}\n              />\n            </div>\n            <div className=\"div7 flex-column\">\n              <input\n                id=\"inputCompanies\"\n                type=\"text\"\n                label=\"Companies\"\n                onChange={e => this.handleChange(e)}\n                name='companies'\n                placeholder='Companies'\n                value={this.state.companies}\n              />\n            </div>\n            <div className=\"div8 flex-column\">\n              <label for='similars'>Similar games:</label>\n              <input\n                id=\"inputSimilars1\"\n                type=\"text\"\n                label=\"Similar Games\"\n                onChange={e => this.handleChange(e)}\n                name='similars'\n                placeholder='Similar Games'\n                value={this.state.similars}\n              />\n            </div>\n            <div className=\"div9 flex-column\">\n              <label for='screenshots'>Screenshots:</label>\n              <input\n                id=\"inputScreenshots1\"\n                type=\"text\"\n                label=\"Screenshots\"\n                onChange={e => this.handleChange(e)}\n                name='screenshots'\n                placeholder='Screenshot'\n                value={this.state.screenshots}\n              />\n            </div>\n            <div className=\"div10 flex-column\">\n              <label>Category:</label>\n              <select onChange={e => this.handleChange(e)}>\n                <option value='On Sale'>On Sale</option>\n                <option value='Recommended'>Recommended</option>\n                <option value='New'>New</option>\n              </select>\n            </div>\n            <div className=\"div11 flex-column\">\n              <label for='stock'>Stock:</label>\n              <input\n                id=\"inputStock\"\n                type=\"number\"\n                label=\"Stock\"\n                onChange={e => this.handleChange(e)}\n                name='stock'\n                placeholder='Units'\n                value={this.state.stock}\n              />\n            </div>\n            <div className=\"div12 flex-column\">\n              <label for='price'>Price:</label>\n              <input\n                id=\"inputPrice\"\n                type=\"number\"\n                label=\"Price\"\n                onChange={e => this.handleChange(e)}\n                name='price'\n                placeholder='...$'\n                value={this.state.price}\n              />\n            </div>\n            <div className=\"div13 flex-column\"> </div>\n            <div className=\"div14 flex-column\">\n              <button type=\"submit\" value=\"Submit\" >Submit</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\n\nexport default withRouter(NewGame);\n","import axios from \"axios\";\n\nexport default class UserService {\n  constructor() {\n    this.URL = \"http://localhost:5000/api/user\";\n    this.service = axios.create({\n      baseURL: this.URL,\n      withCredentials: true\n    });\n  }\n\n  getUser = id => {\n    return this.service.get(\"/\" + id).then(response => response.data);\n  };\n\n  updateUser = updatedUserObj => {\n    return this.service\n      .put(\"/update/\" + updatedUserObj.id, updatedUserObj)\n      .then(response => response.data);\n  };\n\n  handleUpload(theFile) {\n    return this.service.post(\"/upload\", theFile).then(res => res.data);\n  }\n}","import React, { Component } from 'react'\nimport './GameCard.scss'\nimport axios from 'axios'\nimport UserService from '../../utils/UserService'\n\n\nexport default class GameCard extends Component {\n  constructor(props) {\n    super(props)\n\n    let gameWished = this.props.userInSession.wishlist.includes(this.props.gameID)\n    let buttonSelected, buttonClass;\n\n    if (gameWished) {\n      buttonSelected = true;\n      buttonClass = \"like is-wish\"\n      \n    } else {\n      buttonSelected = false;\n      buttonClass = \"like is-blue\"\n    }\n\n    this.state = {\n      loggedInUser: this.props.userInSession,\n      game: '',\n      buttonSelected: buttonSelected,\n      buttonClass: buttonClass\n    }\n    this.userService = new UserService();\n  }\n\n  componentDidMount() {\n    this.getGameDetails();\n  }\n\n  toggleWish = id => {\n    let wishes = this.state.loggedInUser.wishlist;\n    \n    if (wishes.includes(id)) {\n      wishes.splice(wishes.indexOf(id),1)\n    } else {\n      wishes.push(id)\n    }\n    \n    let updatedUser = {\n      ...this.state.loggedInUser,\n      wishlist: wishes\n    }\n\n    this.setState({\n      ...this.state,\n      loggedInUser: updatedUser\n    })\n    this.userService.updateUser(updatedUser)\n  }\n\n  updateUser(updatedUserObj) {\n    return this.userService.updateUser(updatedUserObj).then().catch();\n  }\n\n  toggleButton() {\n    if(!this.state.buttonSelected) {\n      this.setState({\n        buttonSelected: true,\n        buttonClass: \"like is-wish\"\n      })\n    } else {\n      this.setState({\n        buttonSelected: false,\n        buttonClass: \"like\"\n      })\n    }\n\n    this.toggleWish(this.props.gameID)\n  }\n\n  toggleChart() {\n    if(!this.state.buttonSelected) {\n      this.setState({\n        buttonSelected: true,\n        buttonClass: \"like is-wish\"\n      })\n    } else {\n      this.setState({\n        buttonSelected: false,\n        buttonClass: \"like\"\n      })\n    }\n\n    this.toggleWish(this.props.gameID)\n  }\n\n  getGameDetails = () => {\n    axios\n      .get(`http://localhost:5000/game/${this.props.gameID}`)\n      .then(gameFromDb => {\n        const game = gameFromDb.data;\n        console.log(game);\n        this.setState({ game });\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    let screenshots = null\n    if (!!this.state.game.screenshots) {\n      screenshots = this.state.game.screenshots.map((shot, i) => {\n        return (<div className=\"size\"> {i + 1}\n          <img src={`https://images.igdb.com/igdb/image/upload/t_cover_big_2x/${shot}`} alt=\"Cover game\" />\n        </div>)\n      })\n    }\n\n\n\n    return (\n      <div className=\"container-card\" >\n        <div className=\"images\">\n          <img src={`https://images.igdb.com/igdb/image/upload/t_cover_big_2x/${this.state.game.image}`} alt=\"Cover game\" />\n        </div>\n\n        <p className=\"pick\">{(!!screenshots) ? 'Screenshots' : '' }</p>\n        <div className=\"sizes\">\n          {screenshots}\n          {/* {this.state.game.screenshots.map((shot, i) => (\n                  <div className=\"size\">{i + 1}\n                  <img src={`https://images.igdb.com/igdb/image/upload/t_cover_big_2x/${shot}`} alt=\"Cover game\" />\n                  </div>\n                ))} */}\n        </div>\n        <div className=\"product\">\n          <p>{this.state.game.platform}</p>\n          <h1>{this.state.game.name}</h1>\n          <h2 id=\"price\">{this.state.game.price} €</h2>\n          <div className=\"game-info\">\n            <p className=\"desc\">{this.state.game.description}</p>\n            <h2>Genres:</h2>\n            {/* {this.state.game.genre.map(gen => (\n            <p className=\"desc\">{gen}</p>\n          ))} */}\n            <p className=\"desc\">{this.state.game.genre}</p>\n            <h2>Companies:</h2>\n            <p className=\"desc\">{this.state.game.companies}</p>\n            <h2>Similar games:</h2>\n            <p className=\"desc\">{this.state.game.similars}</p>\n          </div>\n          <div className=\"buttons\">\n            <button onClick={() => this.toggleChart()} className=\"add\">Add to Cart</button>\n            <button onClick={() => this.toggleButton()} style={this.state.styles} className={this.state.buttonClass}><span>♥</span></button>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport Navbar from \"../Navbar/Navbar\";\nimport Signup from \"../auth/Signup\";\nimport Login from \"../auth/Login\";\nimport AuthService from \"../auth/AuthService\";\nimport Main from \"../Main/Main\";\nimport NewGame from \"../NewGame/NewGame\"\nimport GameCard from \"../GameCard/GameCard\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n    this.fetchUser()\n  }\n\n  getUser = userObj => {\n    this.setState({\n      loggedInUser: userObj,\n    });\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null });\n    });\n  };\n\n  fetchUser() {\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response,\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false,\n        });\n      });\n  }\n\n  // componentDidMount(){\n  //   this.getGame()\n  // }\n\n  // async getGame() {\n  //   let games = await this.serviceAxios.getGame();\n  //   console.log(games)\n  // }\n\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <React.Fragment>\n          <Redirect to=\"/home\" />\n\n          <div className=\"App flex\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n            </header>\n          </div>\n          <Switch>\n          <Route exact path=\"/home\" component={Main} />\n          <Route exact path=\"/addgame\" component={NewGame} />\n          <Route exact path=\"/game/:id\" render={(props) => {\n            return <GameCard userInSession={this.state.loggedInUser} gameID={props.match.params.id} />}\n          } />\n          {/* <Route exact path=\"/test\" component={Appoteosis} /> */}\n        </Switch>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <Redirect to=\"/login\" />\n\n          <div className=\"App flex\">\n            <header className=\"App-header\">\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout} />\n              <Switch>\n                <Route exact path=\"/signup\" render={() => <Signup getUser={this.getUser} />} />\n                <Route exact path=\"/login\" render={() => <Login getUser={this.getUser} />} />\n                {/* <Route exact path=\"/test\" component={Appoteosis} /> */}\n              </Switch>\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.jsx';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}